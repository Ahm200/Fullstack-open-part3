{"version":3,"sources":["components/Personform.js","components/Filter.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","required","type","Filter","filterByName","Persons","persons","filter","filteredName","deletePerson","map","person","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilteredName","setFiler","setMessage","messageType","setMessageType","useEffect","personService","returnedData","showMessage","msg","setTimeout","event","search","target","toLowerCase","includes","preventDefault","exist","console","log","length","CreatedData","concat","window","confirm","ChangedPerson","updatedPerson","p","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2956cdb9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PersonForm = ({addPerson,newName,newNumber,handleNameChange,handleNumberChange}) =>\r\n{\r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n        <h1>add a new</h1>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} required />\r\n          <div>number: <input value={newNumber} onChange={handleNumberChange} required/></div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Filter = ({filterByName}) =>\r\n{\r\n  return <div>filter shown with <input onChange={filterByName}/></div>\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst Persons = ({ persons, filter, filteredName,deletePerson }) => {\r\n  return (<div>\r\n    {filter ? filteredName.map(person => <div key={person.id}>{person.name} {person.number}</div>) :\r\n      persons.map(person => <div key={person.id}>{person.name} {person.number} <button onClick={() => deletePerson(person.id,person.name)}>delete</button></div>)\r\n    }\r\n  </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Persons;","import axios from 'axios';\r\nconst baseUrl =  '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response);\r\n  }\r\n  export default { getAll,create, update,remove}","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (type === \"success\") {\r\n    return (\r\n      <div className='success'>\r\n        {message}\r\n      </div>)\r\n  }\r\n\r\n  if (type === \"error\") {\r\n    return (\r\n      <div className='error'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default Notification;","import React from 'react';\nimport { useState, useEffect } from 'react'\nimport PersonForm from './components/Personform'\nimport Filter from \"./components/Filter\"\nimport Person from \"./components/Persons\"\nimport personService from \"./services/persons\"\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('');\n  const [filteredName, setFilteredName] = useState([]);\n  const [filter, setFiler] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(returnedData => {\n        setPersons(returnedData)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const exist = persons.filter(person => person.name === newName)\n    console.log(exist);\n    if (exist.length === 0) {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(personObject)\n        .then(CreatedData => {\n          setPersons(persons.concat(CreatedData))\n          setNewName('');\n          setNewNumber('');\n\n          showMessage(`Added ${newName}`,\"success\");\n        })\n    }\n    else {\n      if (window.confirm(`${newName} is already added to phonebook,replace the old number with new one?`)) {\n        const ChangedPerson = { ...exist[0], number: newNumber };\n        console.log(ChangedPerson);\n        personService\n          .update(exist[0].id, ChangedPerson)\n          .then(returnedData => {\n            setPersons(persons.map(person => person.id !== returnedData.id ? person : returnedData));\n          })\n        showMessage(`Updated ${exist[0].name}'s number`,\"success\");\n        setNewName('');\n        setNewNumber('');\n      }\n    }\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const showMessage = (msg,type) =>\n  {\n    setMessage(msg);\n    setMessageType(type);\n    setTimeout(() => {\n      setMessage(null);\n      setMessageType('');\n    }, 3000);\n  }\n  const filterByName = event => {\n    const search = event.target.value;\n    setFiler(search);\n    setFilteredName(persons.filter(person => person.name.toLowerCase().includes(search)))\n  }\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService\n        .remove(id)\n        .then(response => {\n          showMessage(`Deleted ${name}`,\"error\");\n          const updatedPerson = persons.filter(p => p.id !== id)\n          setPersons(updatedPerson)\n        })\n        .catch(error => {\n          showMessage(`Information of ${name} has already been removed from server`,\"error\");\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} type={messageType} />\n\n      <Filter filterByName={filterByName} />\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Person persons={persons} filter={filter} filteredName={filteredName} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}